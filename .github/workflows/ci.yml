name: 'ci'

on: [push, pull_request]

jobs:
  build:
    name: 'Build on ${{ matrix.os.name }} ${{ matrix.arch }}'
    runs-on: ${{ matrix.os.name }}-${{ matrix.os.version }}

    strategy:
      matrix:
        os:
          - name: Ubuntu
            version: latest
          - name: macOS
            version: latest
          - name: Windows
            version: latest
        arch: [x64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          architecture: ${{ matrix.arch }}

      - name: Install dependencies and build from source
        run: npm ci --build-from-source

      - name: Prebuild fat binaries
        if: ${{ matrix.os.name == 'macOS' }}
        run: npm run prebuild:fat

      - name: Prebuild binaries
        if: ${{ matrix.os.name != 'macOS' }}
        run: npm run prebuild

      - name: 'Upload prebuilt binaries'
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.os.name }}-${{ matrix.arch }}
          path: prebuilds

  publish:
    name: 'Publish release'
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js with registry configured for publish
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies without building
        run: npm ci --ignore-scripts

      - name: Download prebuilt binaries
        uses: actions/download-artifact@v4
        with:
          path: .prebuilds

      - name: Merge prebuilds
        run: |
          mkdir prebuilds
          mv .prebuilds/*/* prebuilds/
          rmdir .prebuilds/*
          rmdir .prebuilds

      - name: List prebuilds
        run: ls -laR prebuilds

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
